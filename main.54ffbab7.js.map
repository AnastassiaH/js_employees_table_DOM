{"version":3,"sources":["scripts/main.js"],"names":["onceClicked","table","document","querySelector","tableBody","children","tableHead","sortTable","sortBy","order","index","firstElementChild","findIndex","item","textContent","rows","sort","a","b","valueA","valueB","Number","isSalary","slice","split","join","forEach","append","clickCount","onclick","e","target","innerText","classList","remove","parentElement","add","newEmployeeForm","createElement","insertAdjacentHTML","body","MIN_NAME_LENGTH","MIN_AGE","MAX_AGE","validateForm","elements","isEmpty","pop","some","value","length","pushNotification","onsubmit","preventDefault","name","position","office","age","salary","replace","reset","title","description","type","notification","messageTitle","messageText","style","top","right","dataset","qa","setTimeout","handleEditInput","text","editInput","focus","saveChanges","activeElement","keyCode","trim","addEventListener","ondblclick","firstChild"],"mappings":"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","file":"main.54ffbab7.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tableBody = table.children[1];\nconst tableHead = table.children[0];\n\n// sort table function\n\nconst sortTable = (sortBy, order) => {\n  const index = [...tableHead.firstElementChild.children]\n    .findIndex(item => item.textContent === sortBy);\n  const rows = [...tableBody.children];\n\n  rows.sort((a, b) => {\n    let valueA = a.children[index].textContent;\n    let valueB = b.children[index].textContent;\n\n    valueB = !order ? [valueA, valueA = valueB][0] : valueB;\n\n    if (Number(valueA)) {\n      return valueA - valueB;\n    }\n\n    const isSalary = Number(valueA.slice(1).split(',').join(''));\n\n    if (isSalary) {\n      return isSalary - Number(valueB.slice(1).split(',').join(''));\n    }\n\n    return valueA > valueB ? 1 : valueA < valueB ? -1 : 0;\n  });\n\n  rows.forEach(item => {\n    tableBody.append(item);\n  });\n};\n\n// sort table by click on header\n\nlet onceClicked;\nlet clickCount = 0;\n\ntableHead.firstElementChild.onclick = (e) => {\n  onceClicked === e.target ? clickCount++ : clickCount = 1;\n\n  sortTable(e.target.innerText, clickCount % 2);\n  onceClicked = e.target;\n};\n\n// selected row class active\n\ntableBody.onclick = (e) => {\n  [...tableBody.children].forEach(item => {\n    item.classList.remove('active');\n  });\n  e.target.parentElement.classList.add('active');\n};\n\n// new Form\n\nconst newEmployeeForm = document.createElement('form');\n\nnewEmployeeForm.classList.add('new-employee-form');\n\nnewEmployeeForm.insertAdjacentHTML('afterbegin', `\n<label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\" required></label>\n<label>Position:\n  <input name=\"position\" type=\"text\" data-qa=\"position\" required>\n</label>\n<label>Office:\n  <select name=\"office\" data-qa=\"office\" required>\n    <option>Tokyo</option>\n    <option>Singapore</option>\n    <option>London</option>\n    <option>New York</option>\n    <option>Edinburgh</option>\n    <option>San Francisco</option>\n  </select>\n</label>\n<label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\" required></label>\n<label>Salary:\n    <input name=\"salary\" type=\"number\"  data-qa=\"salary\" required>\n</label>\n<button type=\"submit\">Save to table</button>\n`);\ndocument.body.append(newEmployeeForm);\n\n// validate function\n\nconst MIN_NAME_LENGTH = 4;\nconst MIN_AGE = 18;\nconst MAX_AGE = 90;\n\nconst validateForm = function(elements) {\n  elements.pop();\n\n  const isEmpty = elements.some(item => !item.value.length);\n\n  if (isEmpty) {\n    pushNotification('Error', 'All fields are required', 'error');\n\n    return false;\n  }\n\n  const isNameValid = elements[0].value.length < MIN_NAME_LENGTH;\n\n  if (isNameValid) {\n    pushNotification('Error',\n      'Name should have more than 4 letters', 'error');\n\n    return false;\n  }\n\n  const isAgeValid = elements[3].value < MIN_AGE || elements[3].value > MAX_AGE;\n\n  if (isAgeValid) {\n    pushNotification('Error',\n      'Name should have more than 4 letters', 'error');\n\n    return false;\n  }\n\n  return true;\n};\n\n// add new row\n\nnewEmployeeForm.onsubmit = (e) => {\n  e.preventDefault();\n\n  if (!validateForm([...newEmployeeForm.elements])) {\n    return;\n  };\n\n  tableBody.insertAdjacentHTML('beforeend', `\n  <tr>\n    <td>${newEmployeeForm.elements.name.value}</td>\n    <td>${newEmployeeForm.elements.position.value}</td>\n    <td>${newEmployeeForm.elements.office.value}</td>\n    <td>${newEmployeeForm.elements.age.value}</td>\n    <td>$${newEmployeeForm.elements.salary.value\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n    </td>\n  </tr>\n  `);\n  newEmployeeForm.reset();\n  pushNotification('Success', 'New employee is successfully added', 'success');\n};\n\n// notification function\n\nconst pushNotification = (title, description, type) => {\n  const notification = document.createElement('div');\n  const messageTitle = document.createElement('h2');\n  const messageText = document.createElement('p');\n\n  notification.classList.add('notification', type);\n  messageTitle.classList.add('title');\n  messageTitle.textContent = title;\n  messageText.textContent = description;\n\n  notification.append(messageTitle);\n  notification.append(messageText);\n  notification.style.top = '10px';\n  notification.style.right = '10px';\n  notification.dataset.qa = 'notification';\n\n  document.body.append(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 2000);\n};\n\n// editing table cells\n\nconst handleEditInput = function(text) {\n  const editInput = document.querySelector('.cell-input');\n\n  editInput.focus();\n\n  const saveChanges = (e) => {\n    if (document.activeElement !== editInput || e.keyCode === 13) {\n      editInput.parentElement.textContent = editInput.value.trim() || text;\n      editInput.remove();\n    }\n  };\n\n  editInput.addEventListener('keydown', saveChanges);\n  editInput.addEventListener('blur', saveChanges);\n};\n\n// editing option\n\ntableBody.ondblclick = (e) => {\n  const text = e.target.firstChild.textContent;\n\n  e.target.firstChild.remove();\n\n  e.target.insertAdjacentHTML('afterbegin', `\n  <input class='cell-input' value='${text}'>\n  `);\n\n  handleEditInput(text);\n};\n"]}